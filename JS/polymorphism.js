// Полиморфизм

// Полиморфизм — свойство системы, позволяющее иметь множество реализаций одного интерфейса. 
// Ничего непонятно. Обратимся к трансформерам.

// Положим, у нас есть три трансформера: Оптимус, Мегатрон и Олег. 
// Трансформеры боевые, стало быть обладают методом attack().
//  Игрок, нажимая у себя на джойстике кнопку «воевать», сообщает игре, 
//  чтобы та вызвала метод attack() у трансформера, за которого играет игрок. 
//  Но поскольку трансформеры разные, а игра интересная, 
//  каждый из них будет атаковать каким-то своим способом. 
//  Скажем, Оптимус — объект класса Автобот, а Автоботы снабжаются пушками с плутониевыми 
//  боеголовками (да не прогневаются фанаты трансформеров). 
//  Мегатрон — Десептикон, и стреляет из плазменной пушки. 
//  Олег — басист, и он обзывается. А в чем польза?

// Польза полиморфизма в данном примере заключается в том, что код игры ничего не знает о 
// реализации его просьбы, кто как должен атаковать, его задача просто вызвать метод attack(), 
// сигнатура которого одинакова для всех классов персонажей. 
// Это позволяет добавлять новые классы персонажей, или менять методы существующих, не меняя код игры. 
// Это удобно.